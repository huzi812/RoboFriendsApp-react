{"version":3,"sources":["Robots.js","components/Card.js","components/Cardlist.js","App.js","reportWebVitals.js","index.js"],"names":["robots","id","name","email","Card","className","src","alt","Cardlist","map","user","i","App","onSearchChange","e","setState","searchfield","target","value","state","filteredRobots","this","filter","toLowerCase","includes","onChange","type","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAaA,G,MAAQ,CACjB,CACIC,GAAI,EACJC,KAAM,UACNC,MAAO,sBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,sBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,sBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,mBAEX,CACIF,GAAI,EACJC,KAAM,QACNC,MAAO,sBAEX,CACIF,GAAI,EACJC,KAAM,UACNC,MAAO,uBAEX,CACIF,GAAI,EACJC,KAAM,SACNC,MAAO,sBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,sBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,wB,OChCAC,EAVH,SAAC,GAAwB,IAAvBH,EAAsB,EAAtBA,GAAKC,EAAiB,EAAjBA,KAAOC,EAAU,EAAVA,MACtB,OACI,sBAAKE,UAAU,mDAAf,UACA,qBAAKC,IAAG,+BAA0BL,EAA1B,2BAAuDM,IAAI,UACnE,6BAAKL,IACL,4BAAIC,QCiBGK,EAtBE,SAAC,GAAgB,IAAdR,EAAa,EAAbA,OAGhB,OACI,qBAAKK,UAAU,GAAf,SAGQL,EAAOS,KAAI,SAACC,EAAMC,GACd,OAAQ,cAAC,EAAD,CAEJV,GAAID,EAAOW,GAAGV,GACdC,KAAMF,EAAOW,GAAGT,KAChBC,MAAOH,EAAOW,GAAGR,OAHZQ,SCgCdC,E,kDApCb,aAAc,IAAD,8BACX,gBAMJC,eAAe,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SANlC,EAAKC,MAAO,CACVnB,OAAQA,EACRgB,YAAY,IAJH,E,0CAcd,WAAS,IAAD,OACDI,EAAiBC,KAAKF,MAAMnB,OAAOsB,QAAO,SAAAtB,GAC9C,OAAOA,EAAOE,KAAKqB,cAAcC,SAAS,EAAKL,MAAMH,YAAYO,kBAGnE,OACE,sBAAKlB,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,qBAAKA,UAAU,MAAf,SACE,uBAAOoB,SAAUJ,KAAKR,eACpBR,UAAU,mCACVqB,KAAK,SACLC,YAAY,yBAEhB,cAAC,EAAD,CAAU3B,OAAQoB,W,GA7BNQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.68731885.chunk.js","sourcesContent":["export const robots =[\n    {\n        id: 1,\n        name: 'huzaifa',\n        email: 'huxx22@SarList.com'\n    },\n    {\n        id: 2,\n        name: 'amad',\n        email: 'huxx22@example.com'\n    },\n    {\n        id: 3,\n        name: 'maaz',\n        email: 'huzaif@example.com'\n    },\n    {\n        id: 4,\n        name: 'Saif',\n        email: 'uzi@example.com'\n    },\n    {\n        id: 5,\n        name: 'Asmat',\n        email: 'huzaii@example.com'\n    },\n    {\n        id: 6,\n        name: 'huzaing',\n        email: 'huzaing@example.com'\n    },\n    {\n        id: 9,\n        name: 'Andrei',\n        email: 'huxx22@SarList.com'\n    },\n    {\n        id: 7,\n        name: 'Yiha',\n        email: 'huxx22@SarList.com'\n    },\n    {\n        id: 8,\n        name: 'Yuri',\n        email: 'huxx22@SarList.com'\n    },\n]\n","import React from 'react';\n\nconst Card =({id , name , email}) =>{\n    return(\n        <div className=\" tc bg-light-green dib br3 pa3 ma3 grow shadow-5\">\n        <img src={`https://robohash.org/${id}?set=set1&size=150x150 `} alt=\"robot\" />\n        <h2>{name}</h2>\n        <p>{email}</p>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nconst Cardlist = ({ robots }) => {\n\n\n    return (\n        <div className=\"\">\n            {\n              \n                robots.map((user, i) => {\n                    return (<Card\n                        key={i}\n                        id={robots[i].id}\n                        name={robots[i].name}\n                        email={robots[i].email} />\n                    );\n                })\n\n            }\n\n        </div>\n    )\n}\n\nexport default Cardlist;\n","import React, { Component} from 'react';\nimport 'tachyons';\nimport {robots}from './Robots';\nimport Cardlist from './components/Cardlist.js';\nimport { render } from 'react-dom';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state ={\n      robots: robots,\n      searchfield:''\n    }\n  }\nonSearchChange=(e)=>{\nthis.setState({searchfield : e.target.value})\n \n}\n\n\n\n render(){\n  const filteredRobots = this.state.robots.filter(robots=>{\n    return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n  \n  }) \n  return (\n    <div className=\"tc\">\n      <h1 className='f1'>RoboFriends</h1>\n      <div className=\"pa2\">\n        <input onChange={this.onSearchChange}\n          className='pa3 ba b--green bg-lightest-blue'\n          type=\"search\"\n          placeholder=\"search robofriends\" />\n      </div>\n      <Cardlist robots={filteredRobots} />\n    </div>\n  );\n }\n\n  }\n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}